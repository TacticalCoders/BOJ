# 회의실은 딱 1개, 회의는 N개 사용표 만들기 문제
# 각 회의의 시작 시간, 끝나는 시간이 주어져 있고, 회의가 겹치지 않게 사용할 수 있는 회의의 최대 개수
# 회의가 끝나는 동시에 다음 회의가 시작될 수 있다고 가정
# 회의의 시작 시간과 끝나는 시간이 같을 수도 있다. 즉 총 회의시간이 0인 회의도 있다.

# 풀이
# 그리디 -> 현재 회의 시작 시간이 이전 회의가 끝난 시간 보다 크거나 같아야 하며, 회의 끝 시간은 다른 회의 중 가장 작아야 한다.
# 따라서 먼저 회의 끝 시간을 기준으로 오름차순 정렬 한 후, end 값 보다 시작 시간이 크다면 cnt를 증가하고 end를 갱신한다.
# * 문제는 시작 시간과 끝 시간이 같은 경우 즉 (2,2),(1,2) 로 정렬이 된다면 (2,2)가 선택되고 (1,2)가 skip되어 카운팅이 넘어간다.
# 해결책은 애초에 (1,2),(2,2) 순서로 정렬되게 하는 것이다.
# 따라서 먼저 끝 시간을 오름차순 정렬한 다음 2차로 시작 시간을 기준으로 정렬해야 한다.
# 이는 sorted함수의 키 값을 람다를 활용한 튜플로 지정하면 된다.

n = int(input())
data = []
for _ in range(n):
    data.append(tuple(list(map(int, input().split()))))
data = sorted(data, key=lambda x: (x[1],x[0]))
cnt = 0
end = 0
for x in data:
    if x[0] >= end:
        cnt += 1
        end = x[1]
print(cnt)
